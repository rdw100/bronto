@page "/charthome"
@using Bronto.Stocks.Pwa.Components
@using Bronto.Stocks.Pwa.Pages.Chart
@using ScottPlot
@using ScottPlot.Blazor

<h3>Parent Component</h3>

<h6>Select a Stock Symbol    
    <StockCombo @bind-SelectedStockSymbol="SelectedStockSymbol" />
</h6>

<ChartToolbar
    OnChartTypeChanged="HandleChartTypeChanged"
    OnIntervalChanged="HandleIntervalChanged"
    OnRangeChanged="HandleRangeChanged"
    OnStartDateChanged="HandleStartDateChanged"
    OnEndDateChanged="HandleEndDateChanged" />

<ChartDisplay @ref="chartComponent" />

<QuoteSummary Symbol="@SelectedStockSymbol" />

@code {
    private string selectedChartType = "Moving";
    private string selectedInterval = "1d";
    private string selectedRange = "5d";
    private DateTime? startDate = DateTime.Today.AddDays(-7);
    private DateTime? endDate = DateTime.Today;
    private ChartDisplay chartComponent;
    private string selectedStockSymbol = "AAPL";

    public string SelectedStockSymbol
    {
        get => selectedStockSymbol;
        set
        {
            selectedStockSymbol = value ?? "AAPL";
            RefreshChart();
        }
    }
    private void HandleChartTypeChanged(string chartType)
    {
        selectedChartType = chartType;
        RefreshChart();
    }

    private void HandleIntervalChanged(string interval)
    {
        selectedInterval = interval;
        RefreshChart();
    }

    private void HandleRangeChanged(string range)
    {
        selectedRange = range;
        RefreshChart();
    }

    private void HandleStartDateChanged(DateTime? date)
    {
        startDate = date;
        RefreshChart();
    }

    private void HandleEndDateChanged(DateTime? date)
    {
        endDate = date;
        RefreshChart();
    }

    private void RefreshChart()
    {
        chartComponent?.RefreshChart(selectedStockSymbol, selectedChartType, selectedInterval, selectedRange, startDate, endDate);
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            RefreshChart();
        }
    }
}